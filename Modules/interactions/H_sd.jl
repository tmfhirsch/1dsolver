"""Redefined CG, returns 0 for unphysical (j·µ¢,m·µ¢) combination (instead of error)"""
function clebschgordan_lax(j‚ÇÅ,m‚ÇÅ,j‚ÇÇ,m‚ÇÇ,j‚ÇÉ,m‚ÇÉ=m‚ÇÅ+m‚ÇÇ)
    for (j·µ¢,m·µ¢) in ((j‚ÇÅ, m‚ÇÅ), (j‚ÇÇ, m‚ÇÇ), (j‚ÇÉ, m‚ÇÉ))
        if !WignerSymbols.œµ(j·µ¢,m·µ¢) # unphysical j·µ¢,m·µ¢ entered
            return 0::Int
        end
    end
    return clebschgordan(j‚ÇÅ,m‚ÇÅ,j‚ÇÇ,m‚ÇÇ,j‚ÇÉ,m‚ÇÉ) # if all good, send on to CG calc
end

# Œæ factor (Cocks et al (2019) equation (7))
const Œº_ratio = 1.00115965 # ratio of e‚Åª mag mom to Bohr magneton (Cocks 2019)
const Œ±_fs = 0.0072973525693 # fine structure constant (Wikipedia)
const Œæ = Œ±_fs^2 * Œº_ratio^2 * 1.0u"hartree*bohr^3"

""" Radial factor in H_sd, V‚Çö(R)
    Input: R~[L]
    Output: V‚Çö(R)~[E]
    Based off Cocks et al (2019) eqn (39)=Beams et al (2006) below (9)"""
function H_sd_radial(R)
    # radial factor
    b=-sqrt(6)*Œæ # ƒß‚Åª¬≤ not written since it cancels with the TTensor factor
    V‚Çö=b/R^3
    return V‚Çö
end

"""Coefficients for spin-dipole interaction for |Œ¶‚Çê‚ü©‚â°|SmS‚ü©|lml‚ü© kets.
    Input: ‚ü®Œ¶‚Çê'|, |Œ¶‚Çê‚ü©, R~[L],
    Output: ‚ü®Œ¶‚Çê'|ÃÇH|Œ¶‚Çê‚ü©/V‚Çö(R) ~ 1"""
function H_sd_coeffs(bra::SmS_ket,ket::SmS_ket)
    # unpack quantum numbers
    S‚ÇÅ_, S‚ÇÇ_, S_, mS_, l_, ml_ = bra.Œì.S‚ÇÅ, bra.Œì.S‚ÇÇ, bra.S, bra.mS, bra.l, bra.ml
    S‚ÇÅ, S‚ÇÇ, S, mS, l, ml = ket.Œì.S‚ÇÅ, ket.Œì.S‚ÇÇ, ket.S, ket.mS, ket.l, ket.ml
    # Œ¥ function
    (mS+ml)==(mS_+ml_) || return 0
    term=(-1)^(mS_-mS)
    term*= clebschgordan_lax(S,mS,2,mS_-mS,S_,mS_)
    term*=clebschgordan_lax(l,ml,2,ml_-ml,l_,ml_)
    term*=TTensor(S‚ÇÅ,S‚ÇÇ,S,S‚ÇÅ_,S‚ÇÇ_,S_)
    term*=CTensor(l,l_)
    term
end

"""‚ü®Œì'S'||ùêì¬≤||ŒìS‚ü© from Beams et al. (2006) eqn (19)"""
function TTensor(S‚ÇÅ,S‚ÇÇ,S,S‚ÇÅ_,S‚ÇÇ_,S_)
    (S‚ÇÅ==S‚ÇÅ_ && S‚ÇÇ==S‚ÇÇ_) || return 0
    ùêì¬≤ = sqrt(S‚ÇÅ*(S‚ÇÅ+1)*S‚ÇÇ*(S‚ÇÇ+1))
    ùêì¬≤*= sqrt(5*(2*S‚ÇÅ+1)*(2*S‚ÇÇ+1)*(2*S+1))
    ùêì¬≤*= wigner9j(S‚ÇÅ,S‚ÇÇ,S,1,1,2,S‚ÇÅ,S‚ÇÇ,S_)
    ùêì¬≤
end

"""‚ü®Œì'S'||ùêÇ¬≤||ŒìS‚ü© from Beams et al. (2006) eqn (20)"""
CTensor(l,l_)=sqrt((2*l+1)/(2*l_+1))*clebschgordan_lax(l,0,2,0,l_,0)

##############################|a‚ü© kets ######################################
"""ÃÇH_sd Coupling coefficients for *symmetrised* |a‚ü©‚â°|ŒìflJmJ‚ü© states
    Input: ‚ü®a'|, |a‚ü©, R~[L]
    Output: ‚ü®a'|ÃÇH_sd|a‚ü©(R)/V‚Çö(R)"""
function H_sd_coeffs(bra::a_ket,ket::a_ket)
    return asymmetric_eval(H_sd_a12_coeffs, bra, ket, nothing)
end

""" Coupling coefficients of the symmetrised |a‚ÇÅ‚ÇÇ‚ü© states ÃÇH_sd.
    Input: ‚ü®a‚ÇÅ‚ÇÇ'|, |a‚ÇÅ‚ÇÇ‚ü©, R~[L]
    Output: ‚ü®a‚ÇÅ‚ÇÇ'|ÃÇH_sd|a‚ÇÅ‚ÇÇ‚ü©/V‚Çö(R) ~ 1
    Based off Cocks et al (2019) eqn (39)"""
function H_sd_a12_coeffs(bra::a12_ket, ket::a12_ket)
    # unpack quantum numbers
    S‚ÇÅ_, i‚ÇÅ_, f‚ÇÅ_ = bra.Œì.Œ±‚ÇÅ.S, bra.Œì.Œ±‚ÇÅ.i, bra.Œì.Œ±‚ÇÅ.f
    S‚ÇÅ, i‚ÇÅ, f‚ÇÅ = ket.Œì.Œ±‚ÇÅ.S, ket.Œì.Œ±‚ÇÅ.i, ket.Œì.Œ±‚ÇÅ.f
    S‚ÇÇ_, i‚ÇÇ_, f‚ÇÇ_ = bra.Œì.Œ±‚ÇÇ.S, bra.Œì.Œ±‚ÇÇ.i, bra.Œì.Œ±‚ÇÇ.f
    S‚ÇÇ, i‚ÇÇ, f‚ÇÇ = ket.Œì.Œ±‚ÇÇ.S, ket.Œì.Œ±‚ÇÇ.i, ket.Œì.Œ±‚ÇÇ.f
    f_, l_, J_, mJ_ = bra.f, bra.l, bra.J, bra.mJ
    f, l, J, mJ = ket.f, ket.l, ket.J, ket.mJ
    # ŒîŒª
    (S‚ÇÅ_==S‚ÇÅ && S‚ÇÇ_==S‚ÇÇ && i‚ÇÅ_==i‚ÇÅ && i‚ÇÇ_==i‚ÇÇ && J_==J && mJ==mJ) || return 0
    # D‚Çê‚ÇÅ‚ÇÇ‚Çã‚Çê‚ÇÅ‚ÇÇ
    result=(-1)^(l_+J)
    result*=sqrt((2*f‚ÇÅ_+1)*(2*f‚ÇÇ_+1)*(2*f_+1)
                 *(2*f‚ÇÅ+1)*(2*f‚ÇÇ+1)*(2*f+1)
                 *(2*l_+1))
    result*=CTensor(l,l)
    result*=wigner6j(f,2,f_,l_,J,l)
    Si_sum=0
    for S_ in abs(S‚ÇÅ_-S‚ÇÇ_):1:(S‚ÇÅ_+S‚ÇÇ_), S in abs(S‚ÇÅ-S‚ÇÇ):1:(S‚ÇÅ+S‚ÇÇ), i in abs(i‚ÇÅ-i‚ÇÇ):1:(i‚ÇÅ+i‚ÇÇ)
        Si_term=(-1)^(-S_-i)
        Si_term*=(2*S_+1)*(2*i+1)
        Si_term*=sqrt(2*S+1)
        Si_term*=wigner6j(f,2,f_,S_,i,S)
        Si_term*=TTensor(S‚ÇÅ_,S‚ÇÇ_,S_,S‚ÇÅ,S‚ÇÇ,S)
        Si_term*=wigner9j(S‚ÇÅ,S‚ÇÇ,S_,i‚ÇÅ,i‚ÇÇ,i,f‚ÇÅ_,f‚ÇÇ_,f_)
        Si_term*=wigner9j(S‚ÇÅ,S‚ÇÇ,S,i‚ÇÅ,i‚ÇÇ,i,f‚ÇÅ,f‚ÇÇ,f)
        Si_sum += Si_term
    end
    result*=Si_sum
    return result
end
